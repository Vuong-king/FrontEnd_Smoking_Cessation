import { useState } from "react";
import { MilestoneCard } from "../../components/generic/milestones/MilestoneCard";
import { MotivationBox } from "../../components/generic/milestones/MotivationBox";

const milestones = [
  {
    id: 1,
    title: "Ng√†y ƒë·∫ßu ti√™n",
    timeframe: "24 gi·ªù ƒë·∫ßu",
    description: "B∆∞·ªõc ƒë·∫ßu quan tr·ªçng nh·∫•t trong h√†nh tr√¨nh cai nghi·ªán",
    icon: "üéØ",
    color: "bg-red-500",
    status: "completed",
    tasks: [
      { id: 1, text: "V·ª©t b·ªè t·∫•t c·∫£ thu·ªëc l√° v√† ƒë·ªì h√∫t thu·ªëc", completed: true, priority: "high" },
      { id: 2, text: "Th√¥ng b√°o v·ªõi gia ƒë√¨nh v√† b·∫°n b√® v·ªÅ quy·∫øt ƒë·ªãnh cai thu·ªëc", completed: true, priority: "high" },
      { id: 3, text: "T·∫£i app theo d√µi cai thu·ªëc l√°", completed: true, priority: "medium" },
      { id: 4, text: "Chu·∫©n b·ªã ƒë·ªì ƒÉn nh·∫π v√† n∆∞·ªõc u·ªëng", completed: false, priority: "medium" },
      { id: 5, text: "L√™n k·∫ø ho·∫°ch ho·∫°t ƒë·ªông thay th·∫ø khi th√®m thu·ªëc", completed: false, priority: "high" }
    ]
  },
  {
    id: 2,
    title: "Tu·∫ßn ƒë·∫ßu ti√™n",
    timeframe: "7 ng√†y",
    description: "V∆∞·ª£t qua giai ƒëo·∫°n cai nghi·ªán c·∫•p t√≠nh",
    icon: "üå±",
    color: "bg-orange-500",
    status: "active",
    tasks: [
      { id: 1, text: "U·ªëng nhi·ªÅu n∆∞·ªõc ƒë·ªÉ thanh l·ªçc c∆° th·ªÉ", completed: true, priority: "high" },
      { id: 2, text: "T·∫≠p th·ªÉ d·ª•c nh·∫π 30 ph√∫t m·ªói ng√†y", completed: false, priority: "medium" },
      { id: 3, text: "Tr√°nh xa nh·ªØng n∆°i c√≥ ng∆∞·ªùi h√∫t thu·ªëc", completed: true, priority: "high" },
      { id: 4, text: "Th·ª±c h√†nh k·ªπ thu·∫≠t th·ªü s√¢u khi th√®m thu·ªëc", completed: false, priority: "high" },
      { id: 5, text: "Ghi nh·∫≠t k√Ω c·∫£m x√∫c h√†ng ng√†y", completed: false, priority: "medium" },
      { id: 6, text: "Tham gia nh√≥m h·ªó tr·ª£ online", completed: false, priority: "medium" }
    ]
  },

];

const StagesPage = () => {
  const [expandedMilestone, setExpandedMilestone] = useState(null);

  const toggleMilestone = (milestoneId) => {
    setExpandedMilestone(expandedMilestone === milestoneId ? null : milestoneId);
  };

  const toggleTask = (milestoneId, taskId) => {
    console.log(`Toggle task ${taskId} in milestone ${milestoneId}`);
  };

  return (
    <div className="min-h-screen bg-gray-50 text-gray-900 p-6">
      <div className="max-w-4xl mx-auto">
        <div className="mb-8 text-center">
          <h1 className="text-4xl font-bold mb-4">H√†nh Tr√¨nh Cai Nghi·ªán Thu·ªëc L√°</h1>
          <p className="text-gray-600 text-lg">Theo d√µi ti·∫øn ƒë·ªô qua t·ª´ng m·ªëc quan tr·ªçng</p>
        </div>

        <div className="space-y-4">
          {milestones.map((milestone) => (
            <MilestoneCard
              key={milestone.id}
              milestone={milestone}
              expanded={expandedMilestone === milestone.id}
              onToggleMilestone={toggleMilestone}
              onToggleTask={toggleTask}
            />
          ))}
        </div>

        <MotivationBox />
      </div>
    </div>
  );
};

export default StagesPage;
